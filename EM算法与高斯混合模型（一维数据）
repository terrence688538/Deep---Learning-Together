import numpy as np

def generateDta(k,mu,sigma,dataNum):
    dataArray=np.zeros(dataNum,dtype=np.float32)
    n=len(k)
    for i in range(dataNum):
        rand=np.random.random()
        Sum=0
        index=0
        while index<n:
            Sum +=k[index]
            if rand<Sum:
                dataArray[i]=np.random.normal(mu[index],sigma[index])
                break
            else:
                index +=1
    return dataArray

def normalpdf(x,mu,sigma):
    p=(np.exp(-(x-mu)**2/(2*sigma**2)))/(np.sqrt(2*np.pi)*sigma)
    return p

def em(dataArray,k,mu,sigma,step):
    n=len(k)
    dataNum=dataArray.shape[0]
    gamma=np.zeros((n,dataNum))
    for s in range(step):
        for i in range(n):
            for p in range(dataNum):
                Sum=0
                for q in range(n):
                    fen_zi=k[q]*normalpdf(dataArray[p],mu[q],sigma[q])
                    Sum +=fen_zi
                gamma[i][p]=k[i]*normalpdf(dataArray[p],mu[i],sigma[i])/Sum
        for i in range(n):
            mu[i]=np.sum(gamma[i]*dataArray)/np.sum(gamma[i])
        for i in range(n):
            k[i]=np.sum(gamma[i])/dataNum
        for i in range(n):
            sigma[i]=np.sqrt(np.sum(gamma[i]*((dataArray-mu[i])**2))/(np.sum(gamma[i])))
    return k,mu,sigma

k = [0.3,0.4,0.3]
mu = [2,4,3]
sigma = [1,1,4]
dataNum = 5000
dataArray=generateDta(k,mu,sigma,dataNum)
k0=[0.2,0.5,0.3]
mu0=[3,5,2]
sigma0=[2,1,3]
step=100
k1,mu1,sigma1=em(dataArray,k0,mu0,sigma0,step)
